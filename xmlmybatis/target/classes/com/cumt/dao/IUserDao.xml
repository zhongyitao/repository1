<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cumt.dao.IUserDao">
    
    
    <resultMap id="userMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <collection property="accounts" column="id" ofType="Account" select="com.cumt.dao.IAccountDao.findByUid">
            <id property="id" column="ID"></id>
            <result property="uid" column="UID"></result>
            <result property="money" column="MONEY"/>
        </collection>
    </resultMap>
    
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <select id="findById" resultType="User" parameterType="int">
        select * from user where id = #{id}
    </select>

    <select id="findByCondition" resultType="User" parameterType="User">
        select * from user
        <where>
            <if test="username != null">
                 and username like #{username}
            </if>
            <if test="null != sex">
                 and sex like #{sex}
            </if>
            <if test="null != address">
                 and address like #{address}
            </if>
            <if test="null != birthday">
                and birthday like #{birthday}
            </if>
        </where>
    </select>

    <insert id="saveUser" parameterType="User">
        <selectKey keyProperty="id" resultType="int" keyColumn="id" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user (username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
    </insert>

    <update id="updateUser" parameterType="User">
        update user set username = #{username},birthday = #{birthday},sex = #{sex},address = #{address} where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="User">
        delete from user where id = #{id}
    </delete>
    
</mapper>